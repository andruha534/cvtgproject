{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { ref, onUnmounted } from 'vue';\n\n// Реактивная переменная для управления видимостью камеры\n\nexport default {\n  __name: 'CVView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const isCameraActive = ref(false);\n\n    // Ссылки на элементы video и canvas\n    const video = ref(null);\n    const canvas = ref(null);\n\n    // Реактивная переменная для хранения результатов предсказания\n    const prediction = ref(null);\n    let stream = null;\n\n    // Функция для отображения камеры\n    const showCamera = () => {\n      isCameraActive.value = true;\n      console.log('Camera active:', isCameraActive.value);\n      startCamera();\n    };\n\n    // Функция для запуска камеры\n    const startCamera = async () => {\n      try {\n        stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (video.value) {\n          video.value.srcObject = stream;\n        }\n      } catch (err) {\n        console.error('Ошибка доступа к камере:', err);\n      }\n    };\n\n    // Функция для остановки камеры\n    const stopCamera = () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n\n    // Останавливаем камеру при размонтировании компонента\n    onUnmounted(() => {\n      stopCamera();\n    });\n\n    // Функция для захвата изображения с камеры и отправки на бэкенд\n    const captureImage = async () => {\n      if (canvas.value && video.value) {\n        const context = canvas.value.getContext('2d');\n        canvas.value.width = video.value.videoWidth;\n        canvas.value.height = video.value.videoHeight;\n        context.drawImage(video.value, 0, 0, canvas.value.width, canvas.value.height);\n        const imageData = canvas.value.toDataURL('image/jpeg');\n        console.log('Captured Image:', imageData);\n        try {\n          const response = await fetch('http://127.0.0.1:5001/predict', {\n            // Замените URL на ваш бэкенд\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              image: imageData\n            })\n          });\n          const data = await response.json();\n          if (data.error) {\n            console.error('Error from server:', data.error);\n            return;\n          }\n          prediction.value = data;\n          console.log('Prediction Result:', data);\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      }\n    };\n    const __returned__ = {\n      isCameraActive,\n      video,\n      canvas,\n      prediction,\n      get stream() {\n        return stream;\n      },\n      set stream(v) {\n        stream = v;\n      },\n      showCamera,\n      startCamera,\n      stopCamera,\n      captureImage,\n      ref,\n      onUnmounted\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onUnmounted","isCameraActive","video","canvas","prediction","stream","showCamera","value","console","log","startCamera","navigator","mediaDevices","getUserMedia","srcObject","err","error","stopCamera","getTracks","forEach","track","stop","captureImage","context","getContext","width","videoWidth","height","videoHeight","drawImage","imageData","toDataURL","response","fetch","method","headers","body","JSON","stringify","image","data","json"],"sources":["/Users/andreysliva/Desktop/tdr_vue/front/src/views/CVView.vue"],"sourcesContent":["<template>\n    <div class=\"cv-wrapper\">\n        <div class=\"main-title-section\">\n            <div class=\"main-title\">\n                <p>Computer Vision</p>\n            </div>\n            <div class=\"try-now-container\">\n                <div class=\"container\">\n                    <button class=\"button\" @click=\"showCamera\">Try now</button>\n                </div>\n            </div>\n        </div>\n\n        <!-- Плавный переход при появлении контейнера камеры -->\n        <transition name=\"fade\">\n            <div v-if=\"isCameraActive\" id=\"camera-container\">\n                <div id=\"camera\">\n                    <video ref=\"video\" width=\"640\" height=\"480\" autoplay></video>\n                    <button id=\"capture\" @click=\"captureImage\">Capture</button>\n                    <canvas ref=\"canvas\" style=\"display: none;\"></canvas>\n                </div>\n                <div id=\"result\">\n                    <div v-if=\"prediction\">\n                        <img :src=\"'data:image/jpeg;base64,' + prediction.image\" alt=\"Processed Image\" />\n                        <div v-if=\"prediction.emotions && prediction.emotions.length > 0\">\n                            <h3>Detected Emotions:</h3>\n                            <ul>\n                                <li v-for=\"(emotion, index) in prediction.emotions\" :key=\"index\">\n                                    {{ emotion.emotion }}: {{ emotion.confidence }}\n                                </li>\n                            </ul>\n                        </div>\n                        <div v-else>\n                            <p>No emotions detected.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<script setup>\nimport { ref, onUnmounted } from 'vue'\n\n// Реактивная переменная для управления видимостью камеры\nconst isCameraActive = ref(false)\n\n// Ссылки на элементы video и canvas\nconst video = ref(null)\nconst canvas = ref(null)\n\n// Реактивная переменная для хранения результатов предсказания\nconst prediction = ref(null)\n\nlet stream = null\n\n// Функция для отображения камеры\nconst showCamera = () => {\n    isCameraActive.value = true\n    console.log('Camera active:', isCameraActive.value)\n    startCamera()\n}\n\n// Функция для запуска камеры\nconst startCamera = async () => {\n    try {\n        stream = await navigator.mediaDevices.getUserMedia({ video: true })\n        if (video.value) {\n            video.value.srcObject = stream\n        }\n    } catch (err) {\n        console.error('Ошибка доступа к камере:', err)\n    }\n}\n\n// Функция для остановки камеры\nconst stopCamera = () => {\n    if (stream) {\n        stream.getTracks().forEach(track => track.stop())\n    }\n}\n\n// Останавливаем камеру при размонтировании компонента\nonUnmounted(() => {\n    stopCamera()\n})\n\n// Функция для захвата изображения с камеры и отправки на бэкенд\nconst captureImage = async () => {\n    if (canvas.value && video.value) {\n        const context = canvas.value.getContext('2d')\n        canvas.value.width = video.value.videoWidth\n        canvas.value.height = video.value.videoHeight\n        context.drawImage(video.value, 0, 0, canvas.value.width, canvas.value.height)\n        const imageData = canvas.value.toDataURL('image/jpeg')\n        console.log('Captured Image:', imageData)\n\n        try {\n            const response = await fetch('http://127.0.0.1:5001/predict', { // Замените URL на ваш бэкенд\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ image: imageData })\n            })\n            const data = await response.json()\n            if (data.error) {\n                console.error('Error from server:', data.error)\n                return\n            }\n\n            prediction.value = data\n            console.log('Prediction Result:', data)\n        } catch (error) {\n            console.error('Error:', error)\n        }\n    }\n}\n</script>\n\n<style scoped>\n/* design */\n.cv-wrapper {\n    margin: 0;\n    background-image: url('@/assets/images/bg-cv.png');\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    color: #ffffff;\n}\n\n/*computer vision section*/\n.main-title-section {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    width: 100%;\n    gap: 20px;\n}\n\n/*animation fade in computer vision*/\n@keyframes fadeInUp {\n    0% {\n        opacity: 0;\n        transform: translateY(50px);\n    }\n\n    100% {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/*computer vision title*/\n.main-title {\n    text-align: center;\n    animation: fadeInUp 2s ease-out;\n}\n\n.main-title p {\n    font-size: 6vw;\n    margin: 0;\n    font-weight: 500;\n}\n\n/*computer vision animation*/\n@keyframes fadeIn {\n    0% {\n        opacity: 0;\n        transform: scale(0.9);\n    }\n\n    100% {\n        opacity: 1;\n        transform: scale(1);\n    }\n}\n\n/*camera section */\n#camera-container {\n    gap: 20px;\n    opacity: 1;\n    transition: opacity 1s ease, transform 1s ease;\n    padding: 20px;\n    border-radius: 15px;\n    background: rgba(0, 0, 0, 0.6);\n    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3);\n    margin-bottom: 50px;\n    display: flex; \n    animation: fadeIn 1s ease;\n}\n\n/*camera section right*/\n#camera,\n#result {\n    border: 1px solid #ddd;\n    border-radius: 15px;\n    overflow: hidden;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    background: #ffffff;\n}\n\n#video {\n    border-radius: 15px 15px 0 0;\n}\n\n#result {\n    width: 640px;\n    height: 480px;\n    background: #f0f0f0;\n    position: relative;\n}\n\n#capture {\n    display: none;\n    width: 100%;\n    padding: 15px;\n    background-color: #03a9f4;\n    color: #fff;\n    border: none;\n    cursor: pointer;\n    font-size: 1.2em;\n    text-align: center;\n    transition: background-color 0.3s ease;\n    border-radius: 0 0 15px 15px;\n}\n\n#capture:hover {\n    background-color: #0288d1;\n}\n\n/* Показываем кнопку capture, когда камера активна */\n#camera-container #capture {\n    display: block;\n}\n\n.try-now-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n}\n\n.button {\n    font-size: 1.4em;\n    padding: 0.6em 0.8em;\n    border-radius: 0.5em;\n    border: none;\n    background-color: #000;\n    color: #fff;\n    cursor: pointer;\n    box-shadow: 2px 2px 3px #000000b4;\n}\n\n.container {\n    position: relative;\n    padding: 3px;\n    background: linear-gradient(90deg, #03a9f4, #f441a5);\n    border-radius: 0.9em;\n    transition: all 0.4s ease;\n    animation: fadeInUp 2s ease-out;\n}\n\n.container::before {\n    content: \"\";\n    position: absolute;\n    inset: 0;\n    margin: auto;\n    border-radius: 0.9em;\n    z-index: -10;\n    filter: blur(0);\n    transition: filter 0.4s ease;\n}\n\n.container:hover::before {\n    background: linear-gradient(90deg, #03a9f4, #f441a5);\n    filter: blur(1.2em);\n}\n\n.container:active::before {\n    filter: blur(0.2em);\n}\n\n/* transitions */\n.fade-enter-active, .fade-leave-active {\n    transition: opacity 1s;\n}\n\n.fade-enter-from, .fade-leave-to {\n    opacity: 0;\n}\n</style>\n"],"mappings":";;AA2CA,SAASA,GAAG,EAAEC,WAAW,QAAQ,KAAI;;AAErC;;;;;;;;IACA,MAAMC,cAAc,GAAGF,GAAG,CAAC,KAAK;;IAEhC;IACA,MAAMG,KAAK,GAAGH,GAAG,CAAC,IAAI;IACtB,MAAMI,MAAM,GAAGJ,GAAG,CAAC,IAAI;;IAEvB;IACA,MAAMK,UAAU,GAAGL,GAAG,CAAC,IAAI;IAE3B,IAAIM,MAAM,GAAG,IAAG;;IAEhB;IACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACrBL,cAAc,CAACM,KAAK,GAAG,IAAG;MAC1BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,cAAc,CAACM,KAAK;MAClDG,WAAW,CAAC;IAChB;;IAEA;IACA,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACAL,MAAM,GAAG,MAAMM,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEX,KAAK,EAAE;QAAK,CAAC;QAClE,IAAIA,KAAK,CAACK,KAAK,EAAE;UACbL,KAAK,CAACK,KAAK,CAACO,SAAS,GAAGT,MAAK;QACjC;MACJ,CAAC,CAAC,OAAOU,GAAG,EAAE;QACVP,OAAO,CAACQ,KAAK,CAAC,0BAA0B,EAAED,GAAG;MACjD;IACJ;;IAEA;IACA,MAAME,UAAU,GAAGA,CAAA,KAAM;MACrB,IAAIZ,MAAM,EAAE;QACRA,MAAM,CAACa,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC;MACpD;IACJ;;IAEA;IACArB,WAAW,CAAC,MAAM;MACdiB,UAAU,CAAC;IACf,CAAC;;IAED;IACA,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAInB,MAAM,CAACI,KAAK,IAAIL,KAAK,CAACK,KAAK,EAAE;QAC7B,MAAMgB,OAAO,GAAGpB,MAAM,CAACI,KAAK,CAACiB,UAAU,CAAC,IAAI;QAC5CrB,MAAM,CAACI,KAAK,CAACkB,KAAK,GAAGvB,KAAK,CAACK,KAAK,CAACmB,UAAS;QAC1CvB,MAAM,CAACI,KAAK,CAACoB,MAAM,GAAGzB,KAAK,CAACK,KAAK,CAACqB,WAAU;QAC5CL,OAAO,CAACM,SAAS,CAAC3B,KAAK,CAACK,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAACI,KAAK,CAACkB,KAAK,EAAEtB,MAAM,CAACI,KAAK,CAACoB,MAAM;QAC5E,MAAMG,SAAS,GAAG3B,MAAM,CAACI,KAAK,CAACwB,SAAS,CAAC,YAAY;QACrDvB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEqB,SAAS;QAExC,IAAI;UACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;YAAE;YAC5DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC,KAAK,EAAET;YAAU,CAAC;UAC7C,CAAC;UACD,MAAMU,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC;UACjC,IAAID,IAAI,CAACxB,KAAK,EAAE;YACZR,OAAO,CAACQ,KAAK,CAAC,oBAAoB,EAAEwB,IAAI,CAACxB,KAAK;YAC9C;UACJ;UAEAZ,UAAU,CAACG,KAAK,GAAGiC,IAAG;UACtBhC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE+B,IAAI;QAC1C,CAAC,CAAC,OAAOxB,KAAK,EAAE;UACZR,OAAO,CAACQ,KAAK,CAAC,QAAQ,EAAEA,KAAK;QACjC;MACJ;IACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}